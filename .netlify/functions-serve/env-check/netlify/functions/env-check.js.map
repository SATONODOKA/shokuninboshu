{
  "version": 3,
  "sources": ["../../../../../../Users/satonodoka/Desktop/shokuninboshu/shokuninboshu-app/netlify/functions/env-check.ts"],
  "sourceRoot": "/var/folders/hc/8f_g4lqn545fsghk0gdpyx_00000gn/T/tmp-38991-gUZhnJmkM5qW",
  "sourcesContent": ["import type { Handler } from '@netlify/functions';\n\nexport const handler: Handler = async (event) => {\n  const headers = {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'Access-Control-Allow-Methods': 'GET, OPTIONS'\n  };\n\n  if (event.httpMethod === 'OPTIONS') {\n    return { statusCode: 200, headers, body: '' };\n  }\n\n  try {\n    const envStatus = {\n      status: 'ok',\n      timestamp: new Date().toISOString(),\n      functions_available: true,\n      env_configured: {\n        LINE_CHANNEL_ACCESS_TOKEN: !!process.env.LINE_CHANNEL_ACCESS_TOKEN,\n        LINE_CHANNEL_SECRET: !!process.env.LINE_CHANNEL_SECRET\n      },\n      environment: {\n        NODE_ENV: process.env.NODE_ENV || 'undefined',\n        NODE_VERSION: process.version\n      }\n    };\n\n    return {\n      statusCode: 200,\n      headers,\n      body: JSON.stringify(envStatus)\n    };\n  } catch (e: any) {\n    return {\n      statusCode: 500,\n      headers,\n      body: JSON.stringify({\n        status: 'error',\n        timestamp: new Date().toISOString(),\n        error: e?.message || 'Internal server error'\n      })\n    };\n  }\n};"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,IAAM,UAAmB,OAAO,UAAU;AAC/C,QAAM,UAAU;AAAA,IACd,gBAAgB;AAAA,IAChB,+BAA+B;AAAA,IAC/B,gCAAgC;AAAA,IAChC,gCAAgC;AAAA,EAClC;AAEA,MAAI,MAAM,eAAe,WAAW;AAClC,WAAO,EAAE,YAAY,KAAK,SAAS,MAAM,GAAG;AAAA,EAC9C;AAEA,MAAI;AACF,UAAM,YAAY;AAAA,MAChB,QAAQ;AAAA,MACR,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,MAClC,qBAAqB;AAAA,MACrB,gBAAgB;AAAA,QACd,2BAA2B,CAAC,CAAC,QAAQ,IAAI;AAAA,QACzC,qBAAqB,CAAC,CAAC,QAAQ,IAAI;AAAA,MACrC;AAAA,MACA,aAAa;AAAA,QACX,UAAU,QAAQ,IAAI,YAAY;AAAA,QAClC,cAAc,QAAQ;AAAA,MACxB;AAAA,IACF;AAEA,WAAO;AAAA,MACL,YAAY;AAAA,MACZ;AAAA,MACA,MAAM,KAAK,UAAU,SAAS;AAAA,IAChC;AAAA,EACF,SAAS,GAAQ;AACf,WAAO;AAAA,MACL,YAAY;AAAA,MACZ;AAAA,MACA,MAAM,KAAK,UAAU;AAAA,QACnB,QAAQ;AAAA,QACR,YAAW,oBAAI,KAAK,GAAE,YAAY;AAAA,QAClC,OAAO,GAAG,WAAW;AAAA,MACvB,CAAC;AAAA,IACH;AAAA,EACF;AACF;",
  "names": []
}
